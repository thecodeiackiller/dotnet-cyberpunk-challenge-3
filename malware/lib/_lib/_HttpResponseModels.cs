using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace dotnet_cyberpunk_challenge_3.malware.lib._lib
{
    public abstract class MessageRoot {}

    public class ProcessList
    {
        public string memoryStartingAddress { get; set; }
    }

    public class BiotechnicaMessageRoot : MessageRoot
    {
        public int messageId { get; set; }
        public string arasakaServer { get; set; }
        public bool netwatchMonitored { get; set; }
        public ArasakaMessageContent content { get; set; }
    }

    public class ArasakaMessageContent
    {
        private string _isAuthenticated;
        public string accessKey { get; set; }
        public string isAuthenticated { get;set;}
        public string isEncrypted { get; set; }
        public int TTL { get; set; }
        public string model {get;set;}
        public List<ArasakaMessageProcessList>? processList { get; set; }
    }

    public class ArasakaMessageProcessList : ProcessList
    {
        public int processId { get; set; }
        public string memory { get; set; }
        public string family { get; set; }
        public string openFiles { get; set; }
    }

    public class MilitechMessageRoot : MessageRoot
    {
        public int messageId { get; set; }
        public string localRegion { get; set; }
        public bool netwatchMonitored { get; set; }
        public MilitechMessageConnection connection { get; set; }
    }

    public class MilitechMessageConnection
    {
        public string accessKey { get; set; }
        public string isAuthenticated { get;set;}
        public string isEncrypted { get; set; }
        public int TTL { get; set; }
        public string model {get;set;}
        public string message { get;set; }
        public List<MilitechICEProcessList>? processList { get; set; }
    }

    public class MilitechICEProcessList : ProcessList
    {
        public int processId { get; set; }
        public string memory { get; set; }
        public string family { get; set; }
        public string openFiles { get; set; }
    }

    public class BiotechnicaMessageRoot : MessageRoot
    {
        public int messageId { get; set; }
        public string localRegion { get; set; }
        public bool netwatchMonitored { get; set; }
        
        public BiotechnicaMessageSystem connection { get; set; }
    }

    public class BiotechnicaProcessList : ProcessList
    {
        public int processId { get; set; }
        public string memory { get; set; }
        public string family { get; set; }
        public string openFiles { get; set; }
    }

    public class BiotechnicaMessageSystem
    {
        public string accessKey { get; set; }
        public string isAuthenticated { get; set; }
        public string isEncrypted { get; set; }
        public int TTL { get; set; }
        public string model { get; set; }
        public string message { get; set; }
        public List<BiotechnicaProcessList>? processList { get; set; }

    }


}